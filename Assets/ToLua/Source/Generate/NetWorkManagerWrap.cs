//this source code was auto-generated by tolua#, do not modify it
using System;
using LuaInterface;

public class NetWorkManagerWrap
{
	public static void Register(LuaState L)
	{
		L.BeginClass(typeof(NetWorkManager), typeof(UnityEngine.MonoBehaviour));
		L.RegFunction("SendMsg", SendMsg);
		L.RegFunction("SendMsgWithClientName", SendMsgWithClientName);
		L.RegFunction("CheckHasMsg", CheckHasMsg);
		L.RegFunction("GetAndRemoveMsg", GetAndRemoveMsg);
		L.RegFunction("__eq", op_Equality);
		L.RegFunction("__tostring", ToLua.op_ToString);
		L.EndClass();
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendMsg(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			NetWorkManager obj = (NetWorkManager)ToLua.CheckObject<NetWorkManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			obj.SendMsg(arg0);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int SendMsgWithClientName(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 3);
			NetWorkManager obj = (NetWorkManager)ToLua.CheckObject<NetWorkManager>(L, 1);
			string arg0 = ToLua.CheckString(L, 2);
			string arg1 = ToLua.CheckString(L, 3);
			obj.SendMsgWithClientName(arg0, arg1);
			return 0;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int CheckHasMsg(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			NetWorkManager obj = (NetWorkManager)ToLua.CheckObject<NetWorkManager>(L, 1);
			bool o = obj.CheckHasMsg();
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int GetAndRemoveMsg(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 1);
			NetWorkManager obj = (NetWorkManager)ToLua.CheckObject<NetWorkManager>(L, 1);
			string o = obj.GetAndRemoveMsg();
			LuaDLL.lua_pushstring(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}

	[MonoPInvokeCallbackAttribute(typeof(LuaCSFunction))]
	static int op_Equality(IntPtr L)
	{
		try
		{
			ToLua.CheckArgsCount(L, 2);
			UnityEngine.Object arg0 = (UnityEngine.Object)ToLua.ToObject(L, 1);
			UnityEngine.Object arg1 = (UnityEngine.Object)ToLua.ToObject(L, 2);
			bool o = arg0 == arg1;
			LuaDLL.lua_pushboolean(L, o);
			return 1;
		}
		catch (Exception e)
		{
			return LuaDLL.toluaL_exception(L, e);
		}
	}
}

